<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="576"
   height="576"
   viewBox="0 0 152.4 152.4"
   version="1.1"
   id="svg5"
   inkscape:version="1.2.1 (9c6d41e410, 2022-07-14)"
   sodipodi:docname="icono_erlen_neural.svg"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="0.6978545"
     inkscape:cx="208.49618"
     inkscape:cy="252.91805"
     inkscape:window-width="1440"
     inkscape:window-height="882"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="g11187" /><defs
     id="defs2"><linearGradient
       id="linearGradient17399"
       inkscape:swatch="solid"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop17397" /></linearGradient><linearGradient
       id="linearGradient6038"
       inkscape:swatch="solid"><stop
         style="stop-color:#5046fa;stop-opacity:1;"
         offset="0"
         id="stop6036" /></linearGradient><linearGradient
       id="linearGradient6003"><stop
         style="stop-color:#5046fa;stop-opacity:1;"
         offset="0.20945945"
         id="stop6007" /><stop
         style="stop-color:#5046fa;stop-opacity:0;"
         offset="1"
         id="stop6009" /></linearGradient><linearGradient
       id="linearGradient5989"
       inkscape:swatch="gradient"><stop
         style="stop-color:#5046fa;stop-opacity:1;"
         offset="0.49324325"
         id="stop5985" /><stop
         style="stop-color:#5046fa;stop-opacity:0;"
         offset="1"
         id="stop5987" /></linearGradient><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient28276"
       id="radialGradient28278"
       cx="76.199997"
       cy="76.279762"
       fx="76.199997"
       fy="76.279762"
       r="65.616661"
       gradientTransform="matrix(1,0,0,0.99878439,0,0.09272632)"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       id="linearGradient28276"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0.79054058"
         id="stop28272" /><stop
         style="stop-color:#616161;stop-opacity:1;"
         offset="0.94"
         id="stop28274" /></linearGradient><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient31370"
       id="radialGradient30599"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1,0,0,0.99878439,0,0.09272632)"
       cx="76.199997"
       cy="76.279762"
       fx="76.199997"
       fy="76.279762"
       r="65.616661" /><linearGradient
       inkscape:collect="always"
       id="linearGradient31370"><stop
         style="stop-color:#737373;stop-opacity:1;"
         offset="0.2027027"
         id="stop31368" /><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="1"
         id="stop31366" /></linearGradient><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6100"
       id="linearGradient6102"
       x1="78.329643"
       y1="101.02866"
       x2="78.329643"
       y2="47.374874"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       id="linearGradient6100"><stop
         style="stop-color:#0d04a8;stop-opacity:1;"
         offset="0.29213482"
         id="stop6096" /><stop
         style="stop-color:#5046fa;stop-opacity:0;"
         offset="1"
         id="stop6098" /></linearGradient></defs><g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"><g
       id="g11187"
       inkscape:label="erlen_entero"
       transform="translate(-0.15347545,-0.09339059)"><g
         id="g188"
         transform="matrix(1.1601209,0,0,1.1601209,-12.124475,-12.369632)"
         inkscape:label="caminito_circuito"
         style="fill:url(#radialGradient28278);fill-opacity:1"><path
           style="fill:#2110c3;fill-opacity:1;stroke-width:0.264583"
           d="m 50.129357,124.62911 c -2.015466,-0.80772 -1.487271,-3.80272 0.670644,-3.80272 1.072084,0 1.940277,0.86819 1.940277,1.94027 0,1.32589 -1.42081,2.33939 -2.610921,1.86245 z m 42.333331,0 c -2.015466,-0.80772 -1.487271,-3.80272 0.670644,-3.80272 1.072084,0 1.940277,0.86819 1.940277,1.94027 0,1.32589 -1.420809,2.33939 -2.610921,1.86245 z m -59.266663,-8.46667 c -2.015468,-0.80771 -1.487272,-3.80272 0.670644,-3.80272 1.072083,0 1.940277,0.86819 1.940277,1.94028 0,1.32589 -1.42081,2.33939 -2.610921,1.86244 z m 84.666665,0 c -2.01547,-0.80771 -1.48727,-3.80272 0.67064,-3.80272 1.07208,0 1.94028,0.86819 1.94028,1.94028 0,1.32589 -1.42081,2.33939 -2.61092,1.86244 z m -42.333335,-4.23333 c -2.015466,-0.80772 -1.48727,-3.80272 0.670645,-3.80272 1.072084,0 1.940277,0.86819 1.940277,1.94027 0,1.32589 -1.42081,2.3394 -2.610922,1.86245 z m -16.933332,-4.23333 c -2.015466,-0.80772 -1.487271,-3.80272 0.670644,-3.80272 1.072084,0 1.940277,0.86819 1.940277,1.94027 0,1.32589 -1.420809,2.33939 -2.610921,1.86245 z m 33.866665,0 c -2.015466,-0.80772 -1.487271,-3.80272 0.670644,-3.80272 1.072084,0 1.940277,0.86819 1.940277,1.94027 0,1.32589 -1.420809,2.33939 -2.610921,1.86245 z M 41.66269,90.762444 c -2.015466,-0.807718 -1.48727,-3.802721 0.670645,-3.802721 1.072084,0 1.940277,0.868193 1.940277,1.940276 0,1.325888 -1.42081,2.339391 -2.610922,1.862445 z m 67.73333,0 c -2.01547,-0.807718 -1.48727,-3.802721 0.67065,-3.802721 1.07208,0 1.94027,0.868193 1.94027,1.940276 0,1.325888 -1.42081,2.339391 -2.61092,1.862445 z M 20.496025,80.179111 c -2.015467,-0.807717 -1.487271,-3.802721 0.670644,-3.802721 1.072083,0 1.940278,0.868193 1.940278,1.940277 0,1.325887 -1.42081,2.33939 -2.610922,1.862444 z m 110.066665,0 c -2.01547,-0.807717 -1.48727,-3.802721 0.67064,-3.802721 1.07208,0 1.94028,0.868193 1.94028,1.940277 0,1.325887 -1.42081,2.33939 -2.61092,1.862444 z M 50.129357,61.129112 c -2.015466,-0.807717 -1.487271,-3.802721 0.670644,-3.802721 2.300452,0 2.636383,3.28228 0.396875,3.877765 -0.291041,0.07739 -0.771424,0.04362 -1.067519,-0.07504 z m 50.799993,0 c -2.015462,-0.807717 -1.487266,-3.802721 0.67065,-3.802721 1.07208,0 1.94028,0.868193 1.94028,1.940276 0,1.325888 -1.42081,2.339391 -2.61093,1.862445 z M 60.712689,44.195779 c -2.015466,-0.807717 -1.48727,-3.802721 0.670645,-3.802721 1.072084,0 1.940277,0.868193 1.940277,1.940277 0,1.325888 -1.42081,2.33939 -2.610922,1.862444 z M 33.196025,35.729113 c -2.015468,-0.807718 -1.487272,-3.802722 0.670644,-3.802722 1.072083,0 1.940277,0.868195 1.940277,1.940278 0,1.325888 -1.42081,2.33939 -2.610921,1.862444 z m 59.266663,0 c -2.015466,-0.807718 -1.487271,-3.802722 0.670644,-3.802722 1.072084,0 1.940277,0.868195 1.940277,1.940278 0,1.325888 -1.420809,2.33939 -2.610921,1.862444 z m 25.400002,0 c -2.01547,-0.807718 -1.48727,-3.802722 0.67064,-3.802722 1.07208,0 1.94028,0.868195 1.94028,1.940278 0,1.325888 -1.42081,2.33939 -2.61092,1.862444 z M 109.39602,18.79578 c -2.01547,-0.807717 -1.48727,-3.802721 0.67065,-3.802721 1.07208,0 1.94027,0.868195 1.94027,1.940277 0,1.325888 -1.42081,2.339391 -2.61092,1.862444 z"
           id="path200" /><path
           style="fill:url(#radialGradient30599);fill-opacity:1;stroke-width:0.264583"
           d="m 49.136693,128.74626 c -3.746735,-1.02498 -5.638025,-5.34324 -3.856445,-8.80519 1.325626,-2.57594 4.249261,-3.897 7.024732,-3.17417 l 1.37269,0.3575 1.736164,-1.74957 c 1.498307,-1.50987 1.736167,-1.88115 1.736167,-2.70998 0,-0.85257 -0.128334,-1.03561 -1.143048,-1.63027 -4.08691,-2.39509 -3.83881,-8.52207 0.434123,-10.721 3.575696,-1.84012 8.042968,0.26455 8.883851,4.18546 0.563475,2.6274 -0.721712,5.5446 -2.949405,6.69474 -0.984018,0.50804 -0.992188,0.52571 -0.992188,2.1452 v 1.63293 l -2.470182,2.45991 -2.470181,2.45991 0.357145,1.37132 c 1.1874,4.55923 -3.088648,8.73472 -7.663423,7.48321 z m 3.130542,-4.51236 c 1.312386,-1.31239 0.382434,-3.5839 -1.467234,-3.5839 -1.087728,0 -2.116666,1.02894 -2.116666,2.11666 0,1.08773 1.028938,2.11667 2.116666,2.11667 0.515506,0 1.057863,-0.24006 1.467234,-0.64943 z m 8.466666,-16.93333 c 1.312386,-1.31239 0.382434,-3.5839 -1.467234,-3.5839 -1.087728,0 -2.116666,1.02893 -2.116666,2.11666 0,1.08773 1.028938,2.11667 2.116666,2.11667 0.515507,0 1.057863,-0.24006 1.467234,-0.64943 z m 19.855204,-2.50901 c 1.347031,0.69547 1.322455,2.32421 1.669155,3.94081 0.563718,2.62853 -0.686991,5.50551 -2.879715,6.62415 l -1.061878,0.54173 v 5.21789 5.21789 l 5.620088,5.62465 5.620088,5.62465 h 7.805259 7.805258 l 5.62465,-5.62009 5.62465,-5.62009 v -3.10578 -3.10578 l -1.06187,-0.54174 c -3.82615,-1.95195 -4.01475,-8.0081 -0.32493,-10.43412 2.9893,-1.96543 7.27677,-1.00698 8.79333,1.96572 l 0.54173,1.06188 h 2.04238 2.04239 l 4.56682,-4.56122 4.56682,-4.56123 v -7.801406 -7.801403 l -1.73462,-1.748012 -1.73462,-1.748015 -1.44038,0.366853 c -1.22718,0.312552 -1.6532,0.312647 -2.87823,5.29e-4 l -1.43786,-0.366207 -3.5194,3.526665 -3.51941,3.526668 h -2.71028 -2.71028 l -0.54173,1.061879 c -1.57942,3.095924 -6.14063,3.980047 -9.0571,1.755587 -4.14957,-3.164985 -2.65881,-9.900404 2.43295,-10.992392 2.62853,-0.563719 5.50551,0.686991 6.62415,2.879714 l 0.54173,1.061879 h 2.04082 2.04083 l 2.80509,-2.796397 2.8051,-2.796394 -0.35838,-1.370793 c -1.18357,-4.527177 2.9745,-8.68317 7.5066,-7.502842 l 1.37269,0.357499 1.73616,-1.749573 1.73617,-1.74957 V 58.203836 47.232524 l -5.62009,-5.62465 c -5.31356,-5.317765 -5.67403,-5.624539 -6.6092,-5.624539 -0.87657,0 -1.04674,0.112901 -1.49551,0.992188 -0.5799,1.136229 -1.13024,1.67282 -2.34864,2.289992 L 120.65,39.701091 v 5.877639 5.877639 l -4.95833,4.963483 -4.95832,4.963482 h -1.65088 -1.65088 l -0.54173,1.061879 c -1.15454,2.263084 -4.15464,3.508824 -6.7945,2.821305 L 95.600961,60.77443 c -1.15642,-4.440333 2.794561,-8.539413 7.299629,-7.573248 1.68103,0.360516 3.29698,1.529937 3.98927,2.88694 0.48663,0.953873 0.64247,1.061879 1.53221,1.061879 0.91845,0 1.24519,-0.25523 4.49254,-3.509277 l 3.50205,-3.509275 v -1.782392 -1.782389 h -6.6844 -6.68441 l -3.520946,-3.528213 -3.520953,-3.528216 -1.370164,0.356846 c -4.448299,1.158513 -8.533502,-2.798752 -7.562627,-7.325784 0.842838,-3.930026 5.305803,-6.036698 8.885764,-4.194387 2.575136,1.325212 3.896986,4.249347 3.174661,7.022837 l -0.357008,1.370793 2.805093,2.796394 2.80509,2.796397 h 6.01495 6.01495 v -1.31754 c 0,-1.271487 -0.0371,-1.336474 -1.06187,-1.85927 -3.82615,-1.951955 -4.01475,-8.008106 -0.32493,-10.434122 2.9893,-1.96543 7.27677,-1.006979 8.79333,1.965719 l 0.54173,1.06188 h 1.64646 1.64647 l 7.07941,7.075765 7.0794,7.075768 V 58.211724 70.52191 l -2.46863,2.458365 -2.46863,2.458365 0.36651,1.439013 c 0.31228,1.226125 0.31228,1.651903 0,2.878027 l -0.36651,1.439013 2.46863,2.458365 2.46863,2.458365 v 9.135507 9.13551 l -6.02138,6.01711 -6.02138,6.01711 h -2.70307 -2.70308 l -0.43557,0.8599 c -0.61717,1.2184 -1.15377,1.76873 -2.28999,2.34864 l -0.99219,0.50639 v 3.76677 3.76677 l -7.07941,7.07577 -7.07941,7.07576 H 97.366973 88.242764 L 82.221382,135.79955 76.2,129.78244 l -6.021382,6.01711 -6.021382,6.01711 h -9.127852 -9.127849 l -7.075768,-7.0794 -7.075765,-7.07941 v -3.76172 -3.76171 l -0.859896,-0.43558 c -1.218397,-0.61717 -1.76873,-1.15376 -2.348635,-2.28999 l -0.50639,-0.99219 h -2.708759 -2.708759 l -6.017113,-6.02138 -6.017113,-6.02138 v -9.131238 -9.131239 l 2.468629,-2.458365 2.468629,-2.458365 -0.366503,-1.439013 c -0.312282,-1.226124 -0.312282,-1.651902 0,-2.878027 L 15.520595,75.43864 13.051966,72.980275 10.583337,70.52191 V 58.211724 45.901535 l 7.079408,-7.075768 7.079408,-7.075765 h 1.639428 c 1.614574,0 1.646111,-0.01409 2.080322,-0.929117 0.872373,-1.838389 2.9671,-3.071003 5.343161,-3.144113 l 1.39561,-0.04294 6.412587,-6.40858 6.412584,-6.40858 h 9.123595 9.123595 l 4.963482,4.958326 4.963483,4.958325 4.963483,-4.958325 4.963482,-4.958326 h 9.033494 9.033491 l 0.51226,-0.992188 c 1.15015,-2.227694 4.06735,-3.512882 6.69475,-2.949405 5.09176,1.091989 6.58252,7.827408 2.43295,10.992391 -2.91647,2.224461 -7.47768,1.340337 -9.0571,-1.755585 l -0.54173,-1.06188 h -8.397981 -8.397978 l -4.561228,4.56682 -4.561226,4.56682 v 5.293421 5.293421 l -2.848592,2.839757 -2.848591,2.83976 h -2.702282 -2.70228 l -0.541731,1.061878 c -1.579422,3.095924 -6.140633,3.980048 -9.057097,1.755587 -4.149572,-3.164985 -2.658819,-9.900403 2.432949,-10.992392 2.628524,-0.563718 5.505505,0.686991 6.624148,2.879715 l 0.541731,1.061878 h 2.05418 2.054183 l 1.380024,-1.397383 1.380024,-1.397381 V 32.79718 28.172457 L 69.516514,23.61123 64.949692,19.050003 h -7.804869 -7.804872 l -5.387043,5.391858 -5.387046,5.391857 0.551669,0.759705 c 1.892522,2.606193 0.80632,7.094533 -2.072317,8.563102 l -1.061879,0.541732 v 5.216596 5.216596 l 3.502054,3.509275 c 3.220932,3.227578 3.57991,3.509277 4.471977,3.509277 0.853342,0 1.031494,-0.119256 1.482185,-0.992188 0.69722,-1.350433 2.409256,-2.602642 4.035084,-2.951318 4.529981,-0.971508 8.484292,3.114283 7.324404,7.567935 l -4.494385,4.492088 c -2.639862,0.687519 -5.639956,-0.558221 -6.794495,-2.821305 L 44.968417,61.383334 H 43.322695 41.676971 L 36.713489,56.425008 31.750006,51.466682 V 45.583887 39.701091 L 30.89011,39.265515 c -1.218397,-0.617172 -1.76873,-1.153763 -2.348635,-2.289992 -0.448136,-0.878049 -0.619651,-0.992188 -1.490944,-0.992188 -0.928917,0 -1.302402,0.31759 -6.609206,5.620089 l -5.624651,5.620088 v 10.975874 10.975877 l 1.736165,1.74957 1.736166,1.749573 1.372688,-0.3575 c 4.532098,-1.180327 8.690172,2.975666 7.5066,7.502843 l -0.358375,1.370792 2.805094,2.796395 2.805094,2.796397 h 2.02026 2.02026 l 0.512263,-0.992188 c 1.150146,-2.227693 4.067341,-3.51288 6.694741,-2.949405 5.091768,1.091988 6.582521,7.827406 2.43295,10.992392 -2.916465,2.22446 -7.477675,1.340336 -9.057098,-1.755587 l -0.541731,-1.061879 h -2.710278 -2.710277 l -3.519408,-3.526668 -3.519408,-3.526666 -1.437853,0.366207 c -1.22503,0.312005 -1.651052,0.31191 -2.878235,-5.29e-4 l -1.440381,-0.366852 -1.734618,1.748014 -1.734619,1.748012 v 7.79581 7.795806 l 4.561227,4.56683 4.561226,4.5667 h 2.027417 2.027417 l 0.512261,-0.99219 c 1.559426,-3.02042 5.862819,-4.0086 8.86392,-2.03541 3.689818,2.42602 3.501226,8.48217 -0.324924,10.43412 l -1.061879,0.54174 v 3.10122 3.10122 l 5.620089,5.62465 5.620088,5.62465 h 7.805258 7.805261 l 5.624646,-5.62009 5.624652,-5.62009 v -5.17418 -5.17419 l -1.380643,-0.91354 c -1.432249,-0.94769 -2.987547,-3.45939 -2.940675,-5.75264 0.03693,-1.80691 1.615217,-3.38112 2.211695,-4.61327 m 19.524643,24.03813 c -5.209235,-1.42742 -6.234377,-8.48661 -1.624735,-11.18804 l 1.143048,-0.66987 V 114.3 111.70445 l -1.143048,-0.66987 c -4.08691,-2.39509 -3.83881,-8.52207 0.434123,-10.721 3.575696,-1.84012 8.042968,0.26455 8.883851,4.18546 0.563475,2.6274 -0.721712,5.5446 -2.949405,6.69474 l -0.992188,0.51226 v 2.59396 2.59395 l 0.992188,0.51226 c 1.34703,0.69547 2.602706,2.40956 2.949405,4.02616 0.974308,4.54303 -3.23011,8.54406 -7.693239,7.32109 z m 3.102213,-4.51956 c 0.409374,-0.40937 0.649433,-0.95173 0.649433,-1.46724 0,-0.5155 -0.240059,-1.05786 -0.649433,-1.46723 -0.409371,-0.40937 -0.951727,-0.64943 -1.467234,-0.64943 -0.515506,0 -1.057862,0.24006 -1.467233,0.64943 -0.409374,0.40937 -0.649433,0.95173 -0.649433,1.46723 0,0.51551 0.240059,1.05787 0.649433,1.46724 0.409371,0.40937 0.951727,0.64943 1.467233,0.64943 0.515507,0 1.057863,-0.24006 1.467234,-0.64943 z m 0,-16.93333 c 0.409374,-0.40938 0.649433,-0.95173 0.649433,-1.46724 0,-0.5155 -0.240059,-1.05786 -0.649433,-1.46723 -0.409371,-0.40938 -0.951727,-0.64943 -1.467234,-0.64943 -0.515506,0 -1.057862,0.24005 -1.467233,0.64943 -0.409374,0.40937 -0.649433,0.95173 -0.649433,1.46723 0,0.51551 0.240059,1.05786 0.649433,1.46724 0.409371,0.40937 0.951727,0.64943 1.467233,0.64943 0.515507,0 1.057863,-0.24006 1.467234,-0.64943 z m -59.266664,8.46666 c 1.312387,-1.31238 0.382434,-3.5839 -1.467233,-3.5839 -1.087728,0 -2.116667,1.02894 -2.116667,2.11667 0,1.08773 1.028939,2.11666 2.116667,2.11666 0.515507,0 1.057861,-0.24005 1.467233,-0.64943 z m 84.666658,0 c 0.40938,-0.40937 0.64944,-0.95173 0.64944,-1.46723 0,-0.51551 -0.24006,-1.05786 -0.64944,-1.46724 -0.40937,-0.40937 -0.95172,-0.64943 -1.46723,-0.64943 -0.5155,0 -1.05786,0.24006 -1.46723,0.64943 -0.40938,0.40938 -0.64944,0.95173 -0.64944,1.46724 0,0.5155 0.24006,1.05786 0.64944,1.46723 0.40937,0.40938 0.95173,0.64943 1.46723,0.64943 0.51551,0 1.05786,-0.24005 1.46723,-0.64943 z M 77.667234,111.5339 c 0.409373,-0.40937 0.649433,-0.95173 0.649433,-1.46723 0,-0.51551 -0.24006,-1.05787 -0.649433,-1.46724 -1.312384,-1.31238 -3.583901,-0.38243 -3.583901,1.46724 0,1.08772 1.028939,2.11666 2.116667,2.11666 0.515506,0 1.057862,-0.24006 1.467234,-0.64943 z M 43.800569,90.367233 c 1.312386,-1.312384 0.382434,-3.5839 -1.467234,-3.5839 -1.087728,0 -2.116667,1.028938 -2.116667,2.116666 0,1.087729 1.028939,2.116667 2.116667,2.116667 0.515506,0 1.057862,-0.240059 1.467234,-0.649433 z m 67.733331,0 c 0.40937,-0.409371 0.64943,-0.951727 0.64943,-1.467234 0,-0.515506 -0.24006,-1.057862 -0.64943,-1.467233 -0.40937,-0.409374 -0.95173,-0.649433 -1.46723,-0.649433 -0.51551,0 -1.05787,0.240059 -1.46724,0.649433 -0.40937,0.409371 -0.64943,0.951727 -0.64943,1.467233 0,0.515507 0.24006,1.057863 0.64943,1.467234 0.40937,0.409374 0.95173,0.649433 1.46724,0.649433 0.5155,0 1.05786,-0.240059 1.46723,-0.649433 z M 22.633904,79.7839 C 23.946288,78.471517 23.016338,76.2 21.166669,76.2 c -1.087728,0 -2.116666,1.028938 -2.116666,2.116667 0,1.087728 1.028938,2.116666 2.116666,2.116666 0.515507,0 1.057862,-0.240059 1.467235,-0.649433 z m 110.066656,0 c 0.40938,-0.409371 0.64944,-0.951727 0.64944,-1.467233 0,-0.515507 -0.24006,-1.057863 -0.64944,-1.467234 C 132.29119,76.440059 131.74884,76.2 131.23333,76.2 c -0.51551,0 -1.05786,0.240059 -1.46723,0.649433 -0.40938,0.409371 -0.64944,0.951727 -0.64944,1.467234 0,0.515506 0.24006,1.057862 0.64944,1.467233 0.40937,0.409374 0.95172,0.649433 1.46723,0.649433 0.51551,0 1.05786,-0.240059 1.46723,-0.649433 z M 52.267235,60.733901 c 1.312386,-1.312383 0.382434,-3.5839 -1.467234,-3.5839 -0.515506,0 -1.057862,0.240059 -1.467233,0.649433 -0.409374,0.409371 -0.649433,0.951727 -0.649433,1.467233 0,0.515507 0.240059,1.057863 0.649433,1.467234 0.409371,0.409374 0.951727,0.649433 1.467233,0.649433 0.515506,0 1.057863,-0.240059 1.467234,-0.649433 z m 50.799995,0 c 1.31239,-1.312383 0.38244,-3.5839 -1.46723,-3.5839 -1.08773,0 -2.116668,1.028938 -2.116668,2.116666 0,1.087729 1.028938,2.116667 2.116668,2.116667 0.5155,0 1.05786,-0.240059 1.46723,-0.649433 z M 62.850568,43.800569 c 0.409374,-0.409372 0.649433,-0.951728 0.649433,-1.467234 0,-0.515506 -0.240059,-1.057862 -0.649433,-1.467234 -0.409372,-0.409373 -0.951728,-0.649433 -1.467234,-0.649433 -0.515506,0 -1.057862,0.24006 -1.467234,0.649433 -0.409373,0.409372 -0.649433,0.951728 -0.649433,1.467234 0,0.515506 0.24006,1.057862 0.649433,1.467234 0.409372,0.409373 0.951728,0.649433 1.467234,0.649433 0.515506,0 1.057862,-0.24006 1.467234,-0.649433 z M 35.333902,35.333902 c 0.409374,-0.409372 0.649433,-0.951726 0.649433,-1.467233 0,-0.515507 -0.240059,-1.057862 -0.649433,-1.467235 -0.409372,-0.409373 -0.951726,-0.649432 -1.467233,-0.649432 -0.515507,0 -1.057862,0.240059 -1.467235,0.649432 -0.409373,0.409373 -0.649432,0.951728 -0.649432,1.467235 0,0.515507 0.240059,1.057861 0.649432,1.467233 0.409373,0.409374 0.951728,0.649433 1.467235,0.649433 0.515507,0 1.057861,-0.240059 1.467233,-0.649433 z m 59.266664,0 c 1.312386,-1.312383 0.382434,-3.5839 -1.467234,-3.5839 -1.087728,0 -2.116666,1.028939 -2.116666,2.116667 0,1.087728 1.028938,2.116666 2.116666,2.116666 0.515507,0 1.057863,-0.240059 1.467234,-0.649433 z m 25.399994,0 c 1.31239,-1.312383 0.38244,-3.5839 -1.46723,-3.5839 -1.08773,0 -2.11667,1.028939 -2.11667,2.116667 0,1.087728 1.02894,2.116666 2.11667,2.116666 0.51551,0 1.05786,-0.240059 1.46723,-0.649433 z M 111.5339,18.400571 c 1.31238,-1.312384 0.38243,-3.583901 -1.46723,-3.583901 -1.08773,0 -2.11667,1.028938 -2.11667,2.116666 0,1.087728 1.02894,2.116667 2.11667,2.116667 0.5155,0 1.05786,-0.240059 1.46723,-0.649432 z"
           id="path190"
           sodipodi:nodetypes="ssscssssssscccsssssssssssscsscccccccccccssscccccccccsccccccsssscccccssccccccssscccccccsccsssscccccccsssscccccsssscccccccccsscccccccccsscccccccccccccccccsscccccccccsscccccccssscccccccccccsssscccccccccccsssscccccccccccccsscccssssccscccccccsssscccccsscccccsssscccccsccccccccccssscccccccccccsscsscccsssscccssssssssssssssssssssscssscssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss"
           inkscape:label="path190" /></g><path
         style="mix-blend-mode:normal;fill:url(#linearGradient6102);fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:3.043;stroke-dasharray:none;stroke-opacity:1"
         d="m 66.163965,74.67692 -13.588728,26.21382 47.577403,0.25479 -9.579072,-25.839373 -0.241053,-24.605564 1.920105,-3.32572 H 64.40667 l 1.923979,3.487918 z"
         id="path3950"
         sodipodi:nodetypes="ccccccccc"
         inkscape:label="erlen_cuerpo"
         transform="translate(1.246888e-6)" /><g
         id="g11180"
         inkscape:label="rayitas"><path
           style="fill:#5046fa;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1.565;stroke-dasharray:none;stroke-opacity:1"
           d="m 59.369599,87.783828 h 7.930235"
           id="path7824" /><path
           style="fill:#5046fa;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1.565;stroke-dasharray:none;stroke-opacity:1"
           d="m 55.376299,95.487251 h 9.929466"
           id="path7826" /><path
           style="fill:#5046fa;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1.565;stroke-dasharray:none;stroke-opacity:1"
           d="m 62.68413,81.38982 h 5.986627"
           id="path7830" /></g></g></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
