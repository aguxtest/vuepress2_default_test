import{_ as f,r as _,M as p,p as m,q as v,R as o,Q as n,N as a,V as e,t as s,O as y,P as x,v as c,a1 as l,j as w}from"./framework-e921cdd2.js";const q="/vuepress2_default_test/assets/image-fd104697.png",j="/vuepress2_default_test/images/hero.png",C="/vuepress2_default_test/assets/hero-3c1981fd.png";const T=l('<h1 id="hola-mundillin" tabindex="-1"><a class="header-anchor" href="#hola-mundillin" aria-hidden="true">#</a> Hola mundillin</h1><p>Sepamos que esto es una librería tipo SSG (static site generators) que puede generar html a partir de markdown. Además por ser de vue soporta componentes de vue enteros con css y js si queremos en medio de los archivitos estos.</p><h2 id="comienzo" tabindex="-1"><a class="header-anchor" href="#comienzo" aria-hidden="true">#</a> Comienzo</h2><h3 id="tablilla" tabindex="-1"><a class="header-anchor" href="#tablilla" aria-hidden="true">#</a> Tablilla</h3><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><p><s>This was mistaken text</s></p>',6),V=n("p",null,"Prueba de emojis VuePress 2 is out 🎉 ! Hola Anda pero no en red así es la vida",-1),B={class:"table-of-contents"},E=n("h3",{id:"codigo-como-string",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#codigo-como-string","aria-hidden":"true"},"#"),s(" Código como string")],-1),A=l(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme<span class="token punctuation">,</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&#39;Hello, VuePress&#39;</span><span class="token punctuation">,</span>

  theme<span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    logo<span class="token operator">:</span> <span class="token string">&#39;https://vuejs.org/images/logo.png&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comparacion-con-numeros-de-linea-y-sin" tabindex="-1"><a class="header-anchor" href="#comparacion-con-numeros-de-linea-y-sin" aria-hidden="true">#</a> Comparacion con numeros de linea y sin</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// line-numbers is enabled by default</span>
<span class="token keyword">const</span> line2 <span class="token operator">=</span> <span class="token string">&#39;This is line 2&#39;</span>
<span class="token keyword">const</span> line3 <span class="token operator">=</span> <span class="token string">&#39;This is line 3&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// line-numbers is disabled</span>
<span class="token keyword">const</span> line2 <span class="token operator">=</span> <span class="token string">&#39;This is line 2&#39;</span>
<span class="token keyword">const</span> line3 <span class="token operator">=</span> <span class="token string">&#39;This is line 3&#39;</span>
</code></pre></div><h3 id="compilacion-del-codigo-versus-no-compilar" tabindex="-1"><a class="header-anchor" href="#compilacion-del-codigo-versus-no-compilar" aria-hidden="true">#</a> Compilacion del codigo versus no compilar</h3><p>(v-pre vs :no-v-pre)</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token comment">&lt;!-- This will be kept as is by default --&gt;</span>
1 + 2 + 3 = {{ 1 + 2 + 3 }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token comment">&lt;!-- This will be compiled by Vue --&gt;</span>
<span class="token comment">&lt;!-- :no-v-pre --&gt;</span>
1 + 2 + 3 = 6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// This won&#39;t be compiled correctly because of js syntax highlighting</span>
<span class="token keyword">const</span> onePlusTwoPlusThree <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="traer-codigo-de-otros-archivos-para-renderizarlo-unicamente" tabindex="-1"><a class="header-anchor" href="#traer-codigo-de-otros-archivos-para-renderizarlo-unicamente" aria-hidden="true">#</a> Traer código de otros archivos para renderizarlo únicamente</h3><p>Podemos traer todo el código</p>`,11),L=l(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;holi&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Javscript&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;BUENO&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>O bien una parte nomás. Si colocamos explícitamnete el tipo de archivo lo interpeta mejor</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;holi&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Javscript&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Por último el más complicado, línea 1 a 2, javascript, highlight linea 2 &quot;@<a href="../foo.js">code{1-2} js{1}:no-line-numbers</a>&quot;</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;holi&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Javscript&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br></div></div><h2 id="usando-vue-en-markdown" tabindex="-1"><a class="header-anchor" href="#usando-vue-en-markdown" aria-hidden="true">#</a> Usando Vue en markdown</h2><h3 id="template-syntax-con-llaves" tabindex="-1"><a class="header-anchor" href="#template-syntax-con-llaves" aria-hidden="true">#</a> Template syntax con llaves</h3><p>Markdown soporta html. Vue template es html con atributos custom. Entonces markdown soport vue template.</p><p><code>One plus one equals: {{ 1 + 1 }}</code></p><p>One plus one equals: 2</p><h3 id="elemento-span-con-v-for" tabindex="-1"><a class="header-anchor" href="#elemento-span-con-v-for" aria-hidden="true">#</a> Elemento span con v-for</h3><p><code>&lt;span v-for=&quot;i in 3&quot;&gt; span: {{ i }} &lt;/span&gt;</code></p>`,12),P=n("h3",{id:"vue-component-en-markdown-tremendo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue-component-en-markdown-tremendo","aria-hidden":"true"},"#"),s(" Vue component EN markdown (tremendo)")],-1),S=n("p",null,[n("code",null,'This is default theme built-in `<Badge />` component <Badge text="demo" />')],-1),N=n("code",null,"<Badge />",-1),z=l(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>_Hello, {{ msg }}_

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RedDiv</span><span class="token punctuation">&gt;</span></span>

_Current count is: {{ count }}_

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RedDiv</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Click Me!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">{</span> h<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">RedDiv</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>
    <span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;red-div&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    ctx<span class="token punctuation">.</span>slots<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token string">&#39;Vue in Markdown&#39;</span>
    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">.red-div</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="asset-handling" tabindex="-1"><a class="header-anchor" href="#asset-handling" aria-hidden="true">#</a> Asset handling</h2><h3 id="url-relativas" tabindex="-1"><a class="header-anchor" href="#url-relativas" aria-hidden="true">#</a> URL relativas</h3><p>Se manejan con el &quot;./&quot;. Son carpetas relativas únicamente y está ok! <img src="`+q+'" alt="An image"></p><h3 id="public-files" tabindex="-1"><a class="header-anchor" href="#public-files" aria-hidden="true">#</a> Public Files</h3><p>Bueno son copiados en el deployment junto con el html y js de output en una misma carpeta. Es IGUAL que vue todo esto. Esta dentro de .vuepress/public la carpeta publica, y se accede con &quot;/&quot; a secas.</p><p><img src="'+j+'" alt="VuePress Logo"></p><h3 id="base" tabindex="-1"><a class="header-anchor" href="#base" aria-hidden="true">#</a> BASE</h3>',8),D=n("wbr",null,null,-1),R=["src"],U=l(`<h3 id="aliases" tabindex="-1"><a class="header-anchor" href="#aliases" aria-hidden="true">#</a> Aliases</h3><p>Alias de paths, los definimos en el config.js</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/utils&#39;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  alias<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;@imagenes_publicas&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./public/images&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+C+'" alt="Image from path alias"></p><h3 id="diferentes-idiomas-locales" tabindex="-1"><a class="header-anchor" href="#diferentes-idiomas-locales" aria-hidden="true">#</a> Diferentes Idiomas / Locales</h3>',5),H={__name:"index.html",setup(I){const k=(u,i)=>w("div",{class:"red-div"},i.slots.default()),h="Vue in Markdown",r=_(0);return(u,i)=>{const g=p("RouterLink"),t=p("router-link"),b=p("Badge");return m(),v("div",null,[o(' Esto de arriba es un "frontmatter" '),o(" https://v2.vuepress.vuejs.org/reference/frontmatter.html "),T,n("p",null,[a(g,{to:"/guide/markdown.html"},{default:e(()=>[s("LINK DE PRUEBA a más LINKS")]),_:1})]),V,o(" Tabla de contenidos con toc "),n("nav",B,[n("ul",null,[n("li",null,[a(t,{to:"#comienzo"},{default:e(()=>[s("Comienzo")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#tablilla"},{default:e(()=>[s("Tablilla")]),_:1})]),n("li",null,[a(t,{to:"#codigo-como-string"},{default:e(()=>[s("Código como string")]),_:1})]),n("li",null,[a(t,{to:"#comparacion-con-numeros-de-linea-y-sin"},{default:e(()=>[s("Comparacion con numeros de linea y sin")]),_:1})]),n("li",null,[a(t,{to:"#compilacion-del-codigo-versus-no-compilar"},{default:e(()=>[s("Compilacion del codigo versus no compilar")]),_:1})]),n("li",null,[a(t,{to:"#traer-codigo-de-otros-archivos-para-renderizarlo-unicamente"},{default:e(()=>[s("Traer código de otros archivos para renderizarlo únicamente")]),_:1})])])]),n("li",null,[a(t,{to:"#usando-vue-en-markdown"},{default:e(()=>[s("Usando Vue en markdown")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#template-syntax-con-llaves"},{default:e(()=>[s("Template syntax con llaves")]),_:1})]),n("li",null,[a(t,{to:"#elemento-span-con-v-for"},{default:e(()=>[s("Elemento span con v-for")]),_:1})]),n("li",null,[a(t,{to:"#vue-component-en-markdown-tremendo"},{default:e(()=>[s("Vue component EN markdown (tremendo)")]),_:1})])])]),n("li",null,[a(t,{to:"#asset-handling"},{default:e(()=>[s("Asset handling")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#url-relativas"},{default:e(()=>[s("URL relativas")]),_:1})]),n("li",null,[a(t,{to:"#public-files"},{default:e(()=>[s("Public Files")]),_:1})]),n("li",null,[a(t,{to:"#base"},{default:e(()=>[s("BASE")]),_:1})]),n("li",null,[a(t,{to:"#aliases"},{default:e(()=>[s("Aliases")]),_:1})]),n("li",null,[a(t,{to:"#diferentes-idiomas-locales"},{default:e(()=>[s("Diferentes Idiomas / Locales")]),_:1})])])])])]),E,o(" Lo que sigue NO es código a ejecutar "),o(" si no un string que se muestra con highlighting "),o(" en las lineas 1, y de 6 a 8 como mencionado "),A,o(" minimal syntax "),L,n("p",null,[(m(),v(y,null,x(3,d=>n("span",null," span: "+c(d),1)),64))]),P,S,n("p",null,[s("This is default theme built-in "),N,s(" component "),a(b,{text:"demo"})]),n("p",null,[n("em",null,"Hello, "+c(h))]),a(k,null,{default:e(()=>[n("p",null,[n("em",null,"Current count is: "+c(r.value),1)])]),_:1}),n("p",null,[n("button",{onClick:i[0]||(i[0]=d=>r.value++)},"Click Me!")]),z,n("p",null,[s("Igual que vue, en config.js debemos colocar la base. Hay un temita que después no busca bien la BASE (por ej agux.gihub.com/labase). En vez de i"),D,s('mport.meta.env.base, vuepress nos da el método "withBase" para usar desde un html por ej '),n("img",{src:u.$withBase("/images/hero.png"),alt:"VuePress Logo"},null,8,R)]),U])}}},O=f(H,[["__file","index.html.vue"]]);export{O as default};
